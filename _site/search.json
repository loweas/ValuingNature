[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Valuing Nature",
    "section": "",
    "text": "In this course, we begin each topic by reviewing the latest best practices for each method. While reading about how to estimate the value of nature is important, applying these methods in practice is half the battle. Throughout the course, we will periodically incorporate hands-on examples that demonstrate how to carry out these estimation techniques using real data.\nThis module is to help beginners with material on implementation of non-market valuation (NMV) with R (https://www.R-project.org). NMV methods have been widely applied in the social sciences such as environmental economics, agricultural economics, and transportation economics. Although various methods are associated with NMV, we focus on contingent valuation, discrete choice experiments, travel cost method, and hedonic pricing."
  },
  {
    "objectID": "index.html#what-is-r",
    "href": "index.html#what-is-r",
    "title": "Valuing Nature",
    "section": "What is R?",
    "text": "What is R?\nR is a programming language and software environment specifically designed for statistical computing and data analysis. It is widely used by statisticians, data scientists, researchers, and analysts to explore, model, and visualize data. Developed in the early 1990s, R has since become one of the most popular tools for applied statistics and quantitative analysis.\nR is open-source, meaning it’s free to use and supported by a large and active global community. Users can contribute packages to CRAN (the Comprehensive R Archive Network), which hosts thousands of libraries that extend R’s functionality across fields like economics, epidemiology, ecology, and more."
  },
  {
    "objectID": "index.html#download",
    "href": "index.html#download",
    "title": "Valuing Nature",
    "section": "Download",
    "text": "Download\nWe will be getting familiar with R (and RStudio, if necessary). If you are completely unfamiliar with R, you are advised to consult [An Introduction to R] (https://CRAN.R-project.org/manuals.html) or the other support material, which may be found on the websites mentioned below, before referring the contents.\n\nR Project (https://www.R-project.org/)\nThe Comprehensive R Archive Network (CRAN) (https://CRAN.R-project.org/)\nOfficial R Manuals on CRAN (https://CRAN.R-project.org/manuals.html)\nRStudio (https://www.RStudio.com/)"
  },
  {
    "objectID": "sp.html",
    "href": "sp.html",
    "title": "Stated Preference",
    "section": "",
    "text": "Core Stated Preference Methods:\n\nContingent Valuation\nThis method directly asks individuals about their willingness to pay for a good or service, or their willingness to accept compensation for its loss. In R, packages can be used to analyze responses from single-bounded or double-bounded dichotomous choice CV surveys, employing both parametric and nonparametric approaches.\nDiscrete Choice\nDCEs present respondents with several choice scenarios, each containing multiple alternatives described by various attributes and their levels. Respondents choose their preferred alternative in each scenario. R packages facilitate the design of DCEs (e.g., using orthogonal main-effect designs) and the analysis of choice data using models like conditional and binary logit."
  },
  {
    "objectID": "sp.html#example",
    "href": "sp.html#example",
    "title": "Stated Preference",
    "section": "Example",
    "text": "Example\nBased on James Fogarty and Hideo Aizaki\n\nPackages\nOpen R. You will need additional packages DCchoice, Ecdat (Croissant and Graves 2020) and lmtest (Zeileis and Hothorn 2002).\n\n#install.packages(\"DCchoice\",repos = c(\"http://www.bioconductor.org/packages/release/bioc\",\"https://cran.rstudio.com/\"), dep = TRUE)\n\n#install.packages(ggplot2)\n#install.packages(dplyr)\n\nAfter installing the necessary packages, the next step is to load DCchoice, Ecdat, and lmtest into your current R session. The DCchoice package provides the core functions used in our analysis. Additionally, lmtest offers essential tools for model testing. The Ecdat package includes publicly available real-world datasets.\nFor this example, we’ll use the NaturalParks dataset to demonstrate how contingent valuation (CV) study data can be analyzed.\n\nlibrary(DCchoice)\nlibrary(Ecdat)\nlibrary(lmtest)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\nLoad Data\nWe will use a built-in sample dataset from the Ecdat package. After loading the dataset, you can use the head() function to preview its contents. By default, head() displays the first six rows along with the column names, but you can adjust the number of rows shown by using the n argument. This function is a quick way to get an overview of the dataset’s structure.\n\n# Load the data from Ecdat package\ndata(NaturalPark, package = \"Ecdat\") \n\n# Display the first three rows of data          \nhead(NaturalPark, n = 5)                     \n\n  bid1 bidh bidl answers age    sex income\n1    6   18    3      yy   1 female      2\n2   48  120   24      yn   2   male      1\n3   48  120   24      yn   2 female      3\n4   24   48   12      nn   5 female      1\n5   24   48   12      ny   6 female      2\n\n\n\n\nData Variables\nThe NaturalParks (NP) dataset contains seven variables, each representing a specific aspect of the survey responses:\n\nbid1: The initial bid amount (in euros) presented in the first willingness-to-pay (WTP) question. In this dataset, there are four possible bid amounts: 6, 12, 24, and 48.\nbidh: The higher follow-up bid amount, shown only if the respondent answered “yes” to the initial WTP question.\nbidl: The lower follow-up bid amount, shown only if the respondent answered “no” to the initial WTP question.\nanswers: A factor variable representing the respondent’s answers to the two WTP questions. The four possible combinations are:\n\nnn: no to both\nny: no to first, yes to second\nyn: yes to first, no to second\nyy: yes to both\n\nSince there are four combinations, this factor variable has four levels.\n\nage: Age is grouped into six brackets rather than exact values. Higher bracket numbers correspond to older respondents.\nsex: A factor variable with two levels: “male” and “female.”\nincome: Income is also grouped into eight brackets. As with age, higher numbers represent higher income levels.\n\n\n\nData Manipulation\nThe decision identifies what each individual prefers. This is indicated by the “yes” and “no.” The variable needs to be converted into a numerical representation. To do this you will need to write a loop and create a binary indicator for when the individuals says yes to the first bid. This is indicated by the first letter of the variable starting with “y”\n\nNaturalPark$ans1 &lt;- ifelse(NaturalPark$answers == \"yy\" | NaturalPark$answers == \"yn\", 1, 0)\n\n# Display the first three rows of data          \nhead(NaturalPark, n = 5)   \n\n  bid1 bidh bidl answers age    sex income ans1\n1    6   18    3      yy   1 female      2    1\n2   48  120   24      yn   2   male      1    1\n3   48  120   24      yn   2 female      3    1\n4   24   48   12      nn   5 female      1    0\n5   24   48   12      ny   6 female      2    0\n\n\nNow we want to count the number of individuals who said yes for each price. This table shows the rows as yes or no for first bid and all the prices.\n\ntable(NaturalPark$ans1, NaturalPark$bid1) \n\n   \n     6 12 24 48\n  0 26 34 40 41\n  1 50 43 42 36\n\n\nThe table can be interpreted as follows:\n\nFor a bid price of €6, there are 76 survey responses. Out of these, 50 respondents said they would be willing to pay €6, while 26 said they would not.\nAnd so on for higher bid amounts.\n\nAs the bid price increases, we expect rationally (from law of demand) there will be a decline in the proportion of “yes” responses, since fewer people are likely to be willing to pay higher amounts for the same environmental improvement.\n\nThis pattern is visible in the table, particularly when reading across the row representing “yes” responses (often coded as 1), where the number of affirmative answers drops from 50 to 36, and continues decreasing with higher bids. Lets look at this in a graph.\n\n\nData Visualization\nTo create our demand line, we will first have to convert the data in the right shape form.\n\nyes_data &lt;- as.data.frame(table(NaturalPark$ans1, NaturalPark$bid1)) %&gt;%\n  rename(Answer = Var1, Bid = Var2, Count = Freq) %&gt;%\n  filter(Answer == 1) %&gt;%\n  mutate(Bid = as.numeric(as.character(Bid)))\n\n# Display the first three rows of data          \nhead(yes_data, n = 5)  \n\n  Answer Bid Count\n1      1   6    50\n2      1  12    43\n3      1  24    42\n4      1  48    36\n\n\nNow we will use ggplot and visually show how people respond to bid prices:\n\nggplot(yes_data, aes(x = Count, y = Bid)) +\n  geom_line(color = \"darkgreen\", size = 1.2) +\n  geom_point(color = \"darkgreen\", size = 3) +\n  scale_y_continuous(breaks = yes_data$Bid) +\n  labs(\n    title = \"Decline in 'Yes' Responses with Higher Bid Prices\",\n    x = \"Number of 'Yes' Responses\",\n    y = \"Bid Amount (€)\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nAnd voilà! There we have a downward sloping demand curve!\nPeople respond to prices which makes sense and suggest that people are responding in a way that they do in reality.\n\n\nModel Estimation\nNow that we have explored the data and tested peoples rational. We are going to estimate the willingness to pay for the contingent valuation question.\nFor now, we’ll ignore gender, income, and age. The model assumes that a person’s response :\n\n0 (“no, not willing to pay”)\n1 (“yes, willing to pay”) depends only on the bid amount (or “price”).\n\nSo this model includes just one explanatory variable which is the bid.\nUsing DCchoice the formula for this type of model is as follows:\nmodel1 &lt;- sbchoice(dep var ~ exp var | bid, dist = \"\", data = my.data)\nHere’s what each part means:\n\nmodel1: The name we give to save the model results (for example, sb1 for the first model).\n&lt;-: The assignment symbol that stores the model in model1.\nsbchoice: The function that runs the model.\ndep_var: The dependent variable (the responses coded as 0 = no, 1 = yes). For our first model this is ans1.\nexp_var: The explanatory variables other than the bid amount. Since we don’t have any for the first model, we just use 1 for the intercept.\n| bid: This part specifies the bid amount variable, which is bid1 in our example.\ndist = \"\": Specifies the distribution used; we’ll always use logistic, so it will be dist = \"logistic\"\ndata = my.data: The data frame that contains the data which in our case is NaturalPark.\n\nAfter fitting the model, we usually check the results with the summary() function. To focus on the coefficient estimates, we can use coeftest() from the lmtest package.\n\n# A very simple model\nsb1 &lt;- sbchoice(ans1 ~ 1 | bid1,  dist = \"logistic\", data = NaturalPark)\ncoeftest(sb1)\n\n\nz test of coefficients:\n\n              Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept)  0.5500450  0.1998739  2.7520 0.005924 **\nBID         -0.0157223  0.0071807 -2.1895 0.028560 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe most important thing to notice in the model’s coefficients is the negative sign on the bid variable. No matter how the original data is coded, the bid will always show up as BID in the results. This negative sign means that as the bid price goes up, fewer people say “yes” they are less willing to pay that amount!\nThe results also show that this relationship is statistically significant, meaning it’s unlikely to be due to chance.\nLets see these results visually by using the plot() function. This plot shows the willingness-to-pay data along with a horizontal line marking the point where 50% of people say “yes.” From the plot, you can see that this 50% support happens at about €35.\n\n# plots the predicted support at each bid value \nplot(sb1, las = 1)  \n\n# adds a horizontal line to the plot \nabline(h = 0.5, lty = 2, col = \"red\") \n\n\n\n\n\n\n\n\n\n\nFull Estimation\nWe now look at the full model summary output we get when we use the sbchoice() function:\n\n#  Model summary\nsummary(sb1) \n\n\nCall:\nsbchoice(formula = ans1 ~ 1 | bid1, data = NaturalPark, dist = \"logistic\")\n\nFormula:\nans1 ~ 1 | bid1\n\nCoefficients: \n             Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept)  0.550045   0.199874   2.752  0.00592 **\nBID         -0.015722   0.007181  -2.190  0.02856 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nDistribution: logistic \nNumber of Obs.: 312  \nlog-likelihood: -212.3968 \npseudo-R^2: 0.0113 , adjusted pseudo-R^2: 0.0020 \nLR statistic: 4.841 on 1 DF, p-value: 0.028 \nAIC: 428.793653 , BIC: 436.279659 \n\nIterations: 4  \nConvergence: TRUE \n\nWTP estimates:\n Mean : 63.95526 \n Mean : 26.04338 (truncated at the maximum bid)\n Mean : 47.26755 (truncated at the maximum bid with adjustment)\n Median : 34.98512 \n\n\nThe summary output has several parts:\n\nThe model we estimated:\nFormula:\nans1 ~ 1 | bid1\n\nCoefficients: \n             Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept)  0.550045   0.199874   2.752  0.00592 **\nBID         -0.015722   0.007181  -2.190  0.02856 * \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\nThe second part shows the model’s coefficients and whether they are statistically significant.\nDistribution: logistic \nNumber of Obs.: 312  \nlog-likelihood: -212.3968 \npseudo-R^2: 0.0113 , adjusted pseudo-R^2: 0.0020 \nLR statistic: 4.841 on 1 DF, p-value: 0.028 \nAIC: 428.793653 , BIC: 436.279659 \nThe third part shows how well the model fits the data. This helps us compare different models. It’s important to see “Convergence: TRUE,” which means the model worked properly. If not, you’ll get an error.\nIterations: 4  \nConvergence: TRUE \nThe fourth part shows the estimated average and median willingness to pay (WTP). Lets take a moment here\nWTP estimates:\n Mean : 63.95526 \n Mean : 26.04338 (truncated at the maximum bid)\n Mean : 47.26755 (truncated at the maximum bid with adjustment)\n Median : 34.98512 \n\n\n1. Mean WTP\nValue: Value: 63.95\nThis estimate can be calculated by taking the coefficient of the estimation on bid:\n\\(1/\\beta_{bid} = 1/-0.015722=63.95\\)\nThis is the unbounded mean and its calculated using the full range of the estimated distribution of WTP, even beyond your maximum bid.\nHow it’s calculated:\n\nUses the model’s estimated coefficients to integrate the WTP distribution from 0 to infinity (or theoretically negative infinity to positive infinity depending on the model).\nIssue: May overestimate WTP, especially if the upper tail is long (which it often is).\n\n\nmedianWTP=1/sb1$coefficients[2]\nmedianWTP\n\n     BID \n-63.6041 \n\n\n\n\n2. Mean WTP (truncated at max bid)\nValue: 26.04\n\nThis is the mean WTP truncated at the maximum bid in your data.\n\\(1/\\beta_{bid}(1+exp(\\beta_0+\\sum(\\beta_nZ_n)))\\)\nHow it’s calculated:\n\nIntegration is limited from 0 up to the highest bid amount offered in your survey.\nWhy: This avoids overestimating WTP from extrapolating too far beyond your data.\n\n\nmedianWTP * (log(1 + exp(sb1$coefficients[1] + sb1$coefficients[2] * max(NaturalPark$bid1))) - log(1 + exp(sb1$coefficients[1])))\n\n     BID \n26.04338 \n\n\n\n\n3. Mean WTP (truncated with adjustment)\nValue: 47.27\n\nThis is the same as #2 but with a correction applied to adjust for truncation bias.\nHow it’s calculated:\n\nStill truncated at the max bid, but includes a bias-correction factor based on the distribution. the truncated mean WTP with the adjustment of Boyle et~al.(1988)\nWhy: Balances realism (truncation) with statistical accuracy (adjustment).\n\n\n\n4. Median WTP\nValue: 34.99\n\nThis is the bid level at which 50% of respondents are predicted to say “yes”.\nHow it’s calculated:\n\\(-(\\alpha/\\beta_{bid})\\)\n\nIt’s the bid where the predicted probability of saying “yes” is 0.5, based on your model.\nWhy: Commonly used because it’s less sensitive to skewed data than the mean.\n\n\n-sb1$coefficients[1]/sb1$coefficients[2]\n\n(Intercept) \n   34.98512"
  }
]